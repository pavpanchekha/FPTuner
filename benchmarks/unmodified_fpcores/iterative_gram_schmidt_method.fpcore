;; -*- mode: scheme -*-

(FPCore (Q11 Q12 Q13 Q21 Q22 Q23 Q31 Q32 Q33)
        :name "iterative_gram_schmidt_method"
        :description "Orthogonalize a set of non-zero vectors in a Euclidian or Hermitian space.
Inputs: Vectors `Qij`"
        :cite (abdelmalek-bit71 golub-vanloan-1996 hernandez-roman-tomas-vidal-tr07)
        :fpbench-domain mathematics
        :precision binary32
        :pre (and (< 1.0 Q11 (/ 1 7)) (< 1 Q22 (/ 1 25)))
        :example ([Q11 (/ 1 63)] [Q12 0] [Q13 0]
                  [Q21 0] [Q22 (/ 1 225)] [Q23 0]
                  [Q31 (/ 1 2592)] [Q32 (/ 1 2601)] [Q33 (/ 1 2583)])
        (let ([eps .000005])
          (while* (> e eps)
                  (;; h = Qj - 1T qj
                   [h1 0 (+ (+ (* Q11 qj1) (* Q21 qj2)) (* Q31 qj3))]
                   [h2 0 (+ (+ (* Q12 qj1) (* Q22 qj2)) (* Q32 qj3))]
                   [h3 0 (+ (+ (* Q13 qj1) (* Q23 qj2)) (* Q33 qj3))]
                   ;; qj = qj - Qjm1 h
                   [qj1 Q31 (- qj1 (+ (+ (* Q11 h1) (* Q12 h2)) (* Q13 h3)))]
                   [qj2 Q32 (- qj2 (+ (+ (* Q21 h1) (* Q22 h2)) (* Q23 h3)))]
                   [qj3 Q33 (- qj3 (+ (+ (* Q31 h1) (* Q32 h2)) (* Q33 h3)))]
                   ;; rj = rj + h
                   [r1 0.0 (+ r1 h1)]
                   [r2 0.0 (+ r2 h2)]
                   [r3 0.0 (+ r3 h3)]
                   ;; rjj = ||qj||_2
                   [r (+ (+ (* qj1 qj1) (* qj2 qj2)) (* qj3 qj3))
                      (+ (+ (* qj1 qj1) (* qj2 qj2)) (* qj3 qj3))]
                   [rjj 0 (sqrt r)]
                   [e 10.0 (fabs (- 1.0 (/ rjj rold)))]
                   [i 1.0 (+ i 1.0)]
                   [rold (sqrt r) rjj])
                  qj1))) ;; `i`, `qj2`, `qj3`, and `e` are also outputs but are skipped for now
